{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "A sample template to create VPC with 1 Public subnet and EC2-Instance",
  
  "Parameters" : {
    
    "InstanceType" : {
      "Description" : "EC2 instance type",
      "Type" : "String",
      "Default" : "t2.micro",
      "AllowedValues" : ["t2.micro", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.xlarge", "m3.2xlarge", "c1.medium", "c1.xlarge", "cc1.4xlarge", "cc2.8xlarge", "cg1.4xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },
    
    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type" : "String",
      "MinLength" : "1",
      "MaxLength" : "255",
      "AllowedPattern" : "[\\x20-\\x7E]*",
      "ConstraintDescription" : "can contain only ASCII characters."
    },
    
    "TagName" : {
      "Description" : "Tag Name for all Resources",
      "Type" : "String",
      "Default" : "Bastion-Stack",
    }
  },
  
  "Mappings" : {
    "RegionMap" : {
      "us-east-1" : {
        "AMI" : "ami-c481fad3"
      }
    }
  },
  
  "Resources" : {
    
    "BastionVPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : "172.0.0.0/16",
        "EnableDnsSupport" : "true",
        "EnableDnsHostnames" : "true",
        "InstanceTenancy" : "default",
        "Tags" : [{
            "Key" : "Name",
            "Value" : {
              "Ref" : "TagName"
            }
          }
        ]
      }
    },
    
    "PublicSubnet" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "AvailabilityZone" : "us-east-1a",
        "CidrBlock" : "172.0.1.0/24",
        "MapPublicIpOnLaunch" : "true",
        "VpcId" : {
          "Ref" : "BastionVPC"
        },
        "Tags" : [{
            "Key" : "Name",
            "Value" : "PublicSubnet"
          }
        ]
      }
    },
    
    "PrivateSubnet" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "AvailabilityZone" : "us-east-1c",
        "CidrBlock" : "172.0.2.0/24",
        "MapPublicIpOnLaunch" : "false",
        "VpcId" : {
          "Ref" : "BastionVPC"
        },
        "Tags" : [{
            "Key" : "Name",
            "Value" : "PrivateSubnet"
          }
        ]
      }
    },
    
    "IGWPublic" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [{
            "Key" : "Name",
            "Value" : {
              "Ref" : "TagName"
            }
          }
        ]
      }
    },
    
    "PublicRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {
          "Ref" : "BastionVPC"
        },
        "Tags" : [{
            "Key" : "Name",
            "Value" : "PublicRouteTable"
          }
        ]
      }
    },
    
    "PrivateRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {
          "Ref" : "BastionVPC"
        },
        "Tags" : [{
            "Key" : "Name",
            "Value" : "PrivateRouteTable"
          }
        ]
      }
    },
    
    "AttachGateway" : {
      "Type" : "AWS::EC2::VPCGatewayAttachment",
      "Properties" : {
        "VpcId" : {
          "Ref" : "BastionVPC"
        },
        "InternetGatewayId" : {
          "Ref" : "IGWPublic"
        }
      }
    },
    
    "PublicRoute" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "IGWPublic",
      "Properties" : {
        "RouteTableId" : {
          "Ref" : "PublicRouteTable"
        },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : {
          "Ref" : "IGWPublic"
        }
      }
    },
    
    "PublicSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : {
          "Ref" : "PublicSubnet"
        },
        "RouteTableId" : {
          "Ref" : "PublicRouteTable"
        }
      }
    },
    
    "PrivateSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : {
          "Ref" : "PrivateSubnet"
        },
        "RouteTableId" : {
          "Ref" : "PrivateRouteTable"
        }
      }
    },
    
    "InstanceSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Allow http to client host",
        "VpcId" : {
          "Ref" : "BastionVPC"
        },
        "Tags" : [{
            "Key" : "Name",
            "Value" : {
              "Ref" : "TagName"
            }
          }
        ],
        "SecurityGroupIngress" : [{
            "IpProtocol" : "tcp",
            "FromPort" : "80",
            "ToPort" : "80",
            "CidrIp" : "0.0.0.0/0"
          }, {
            "IpProtocol" : "tcp",
            "FromPort" : "443",
            "ToPort" : "443",
            "CidrIp" : "0.0.0.0/0"
          }, {
            "IpProtocol" : "tcp",
            "FromPort" : "22",
            "ToPort" : "22",
            "CidrIp" : "0.0.0.0/0"
          }
        ]
      }
    },
    
    "EIPAddress" : {
      "Type" : "AWS::EC2::EIP",
      "DependsOn" : "EC2Instance",
      "Properties" : {
        "Domain" : "vpc",
        "InstanceId" : {
          "Ref" : "EC2Instance"
        }
      }
    },
    
    "EC2Instance" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "ImageId" : {
          "Fn::FindInMap" : ["RegionMap", {
              "Ref" : "AWS::Region"
            }, "AMI"]
        },
        "SecurityGroupIds" : [{
            "Ref" : "InstanceSecurityGroup"
          }
        ],
        "SubnetId" : {
          "Ref" : "PublicSubnet"
        },
        "InstanceType" : {
          "Ref" : "InstanceType"
        },
        "KeyName" : {
          "Ref" : "KeyName"
        },
        "Tags" : [{
            "Key" : "Name",
            "Value" : "PublicInstnace"
          }
        ]
      }
    },
    
    "PrivateEC2Instance" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "ImageId" : {
          "Fn::FindInMap" : ["RegionMap", {
              "Ref" : "AWS::Region"
            }, "AMI"]
        },
        "SecurityGroupIds" : [{
            "Ref" : "InstanceSecurityGroup"
          }
        ],
        "SubnetId" : {
          "Ref" : "PrivateSubnet"
        },
        "InstanceType" : {
          "Ref" : "InstanceType"
        },
        "KeyName" : {
          "Ref" : "KeyName"
        },
        "Tags" : [{
            "Key" : "Name",
            "Value" : "PrivateInstance"
          }
        ]
      }
    }
    
  }
}
